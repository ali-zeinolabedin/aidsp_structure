#-------------------------------------------
#  Module : Makefile.project.iverilog
#  Author : Ali Zeinolabedin (based on stimc)
#  Company: Blackrock Neurotech
#-------------------------------------------

VLOG_LOG      ?= $(WORK_DIR)/$(SIM_NAME)_vlog.log
SIM_LOG       ?= $(WORK_DIR)/$(SIM_NAME)_sim.log
VLOG_NET_LOG  ?= $(WORK_DIR)/$(SIM_NAME)_vlog_netlist.log


# ------------  cdslib + directories  ------------------------------------------
WORKLIBNAME = work
WORKLIBDIR  = $(WORK_DIR)/$(WORKLIBNAME)

RUNSCR_BATCH    = $(WORK_DIR)/sim_ctrl_batch.tcl
#===============================================================================
# The following statements usually need not to be changed
#===============================================================================
# ------------  build and run tools  -------------------------------------------
VLIB          = vlib
VMAP          = vmap  
VLOG          = vlog
SIM           = vsim

# ------------  tool flags for vvp  --------------------------------------------
VLOG_FLAGS    = -incr -O0 -stats=time,-cmd,msg -logfile $(VLOG_LOG) -work $(WORKLIBDIR)
VLOG_LINT     = -lint
SIM_FLAGS     = -64  -logfile $(SIM_LOG)


VLOG_TARGET      = $(VLOG_LOG)
VLOG_NET_TARGET  = $(VLOG_NET_LOG)


VLOG_SRC_ARGS   += $(addprefix -f ,$(VLOG_SRC_FILES))
VLOG_SOURCES    += $(foreach f,$(VLOG_SRC_FILES), $(shell echo $(shell cat $f | sed -e 'sX^\(\#\|//\).*XX')))
$(info $(VLOG_SOURCES))

VLOG_SRC_ARGS_NET   += $(addprefix -f ,$(VLOG_SRC_FILES_NET))
VLOG_SOURCES_NET    += $(foreach f,$(VLOG_SRC_FILES_NET), $(shell echo $(shell cat $f | sed -e 'sX^\(\#\|//\).*XX')))
#$(info $(VLOG_SOURCES_NET))


# ------------  tool flags for stimc  ------------------------------------------


# ------------  info output ----------------------------------------------------
info-vlog:
ifneq (,$(strip $(VLOG_INCDIRS)))
	$q$(call echo, "$${b}$(vlogcolor)VLOG-INCDIRS$${c}$(shell $(call shell-fmtflags,$(addprefix -I,$(VLOG_INCDIRS))))")
endif
ifneq (,$(strip $(VLOG_FLAGS) $(ADDITIONAL_VLOG_FLAGS)))
	$q$(call echo, "$${b}$(vlogcolor)VLOG-FLAGS$${c}$(shell $(call shell-fmtflags,$(VLOG_FLAGS) $(ADDITIONAL_VLOG_FLAGS)))")
endif

.PHONY: info-vlog  

# ------------  rules ----------------------------------------------------------
$(VLOG_TARGET): $(VLOG_SOURCES) $(COMPILE_DEPS) $(filter-out %.dep,$(MAKEFILE_LIST)) | $(WORK_DIR) info-vlog
	$q$(call echo, "$${b}$(vlogcolor)VLOG$${c} $(SIM_NAME)")
	$q$(VLIB) $(WORKLIBDIR)
	$q$(VMAP) work $(WORKLIBDIR)
	$q$(VLOG) $(addprefix +incdir+,$(VLOG_INCDIRS)) $(VLOG_FLAGS) $(VLOG_SOURCES) 

$(VLOG_LINT): $(VLOG_SOURCES) $(COMPILE_DEPS) $(filter-out %.dep,$(MAKEFILE_LIST)) | $(WORK_DIR) info-vlog
	$q$(call echo, "$${b}$(vlogcolor)LINT$${c} $(SIM_NAME)")
	$q$(VLIB) $(WORKLIBDIR)
	$q$(VMAP) work $(WORKLIBDIR)
	$q$(VLOG) $(addprefix +incdir+,$(VLOG_INCDIRS)) $(VLOG_LINT) $(VLOG_SOURCES) 
	
$(VLOG_NET_TARGET): $(VLOG_SOURCES_NET) $(COMPILE_DEPS) $(filter-out %.dep,$(MAKEFILE_LIST)) | $(WORK_DIR) info-vlog
	$q$(call echo, "$${b}$(vlogcolor)VLOG$${c} $(SIM_NAME)")
	$q$(VLIB) $(WORKLIBDIR)
	$q$(VMAP) work $(WORKLIBDIR)
	$q$(VLOG) $(addprefix +incdir+,$(VLOG_INCDIRS)) $(VLOG_FLAGS) $(VLOG_SOURCES_NET) 


vlog: $(VLOG_TARGET)

lint: $(VLOG_LINT)
	
run: $(VLOG_TARGET) $(RUNSCR_BATCH)
	$q$(call echo, "\n$${b}$(runcolor)RUN $${c} $(SIM_NAME)\n")
	$q$(SIM) $(SIM_FLAGS) $(TOPLEVEL) -batch -do $(RUNSCR_BATCH)

runnet: $(VLOG_NET_TARGET) $(RUNSCR_BATCH)
	$q$(call echo, "\n$${b}$(runcolor)RUN $${c} $(SIM_NAME)\n")
	$q$(SIM) $(SIM_FLAGS) $(TOPLEVEL) -batch -do $(RUNSCR_BATCH)


$(RUNSCR_BATCH): | $(WORK_DIR) 
	@echo 'run -all' >> $@
	


# This is the target that displays the running time
show_time: 
	$qstart_time=$$(date +%s); \
	make runbatch; \
	end_time=$$(date +%s); \
	RUNNING_TIME=$$(expr $$end_time - $$start_time); \
	echo "Start time at $${start_time}";\
	echo "End time at $${end_time}" ; \
  echo "Task completed in $$RUNNING_TIME seconds."

clean-vlog:
	$qrm -f \
        $(VLOG_LOG) $(SIM_LOG)  \
        2> /dev/null || true
	$qrm -rf $(WORKLIBDIR)

clean-gui:

.PHONY: vlog clean-vlog
